{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0.\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = totalPrice + newItem.price;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"sources":["C:/Users/Tec/Desktop/advance_redux/src/store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","itemId","price","quantity","totalPrice","title","removeItemFromCart","filter","cartActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAE;AAC3BE,EAAAA,IAAI,EAAE,MADqB;AAE3BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,KAAK,EAAE,EADG;AAEVC,IAAAA,aAAa,EAAE;AAFL,GAFa;AAM3BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,aAAa,CAAEC,KAAF,EAASC,MAAT,EAAkB;AAC3B,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAoBC,IAAF,IAAYA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAAlD,CAArB;;AACA,UAAK,CAACH,YAAN,EAAqB;AACjBJ,QAAAA,KAAK,CAACJ,KAAN,CAAYY,IAAZ,CAAkB;AACdC,UAAAA,MAAM,EAAEP,OAAO,CAACK,EADF;AAEdG,UAAAA,KAAK,EAAER,OAAO,CAACQ,KAFD;AAGdC,UAAAA,QAAQ,EAAE,CAHI;AAIdC,UAAAA,UAAU,EAAEV,OAAO,CAACQ,KAJN;AAKdhB,UAAAA,IAAI,EAAEQ,OAAO,CAACW;AALA,SAAlB;AAOH,OARD,MAQO;AACHT,QAAAA,YAAY,CAACO,QAAb;AACAP,QAAAA,YAAY,CAACQ,UAAb,GAA0BA,UAAU,GAAGV,OAAO,CAACQ,KAA/C;AACH;AAEJ,KAjBK;;AAkBNI,IAAAA,kBAAkB,CAAEd,KAAF,EAASC,MAAT,EAAkB;AAChC,YAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAkBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAtC,CAArB;;AACA,UAAKH,YAAY,CAACO,QAAb,KAA0B,CAA/B,EAAmC;AAC/BX,QAAAA,KAAK,CAACJ,KAAN,GAAcI,KAAK,CAACJ,KAAN,CAAYmB,MAAZ,CAAoBT,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAxC,CAAd;AACH,OAFD,MAEO;AACHH,QAAAA,YAAY,CAACO,QAAb;AACAP,QAAAA,YAAY,CAACQ,UAAb,GAA0BR,YAAY,CAACQ,UAAb,GAA0BR,YAAY,CAACM,KAAjE;AACH;AACJ;;AA3BK;AANiB,CAAF,CAA7B;AAqCA,OAAO,MAAMM,WAAW,GAAGvB,SAAS,CAACwB,OAA9B;AAEP,eAAexB,SAAf","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst cartSlice = createSlice( {\r\n    name: 'cart',\r\n    initialState: {\r\n        items: [],\r\n        totalQuantity: 0.\r\n    },\r\n    reducers: {\r\n        addItemToCart( state, action ) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find( ( item ) => item.id === newItem.id );\r\n            if ( !existingItem ) {\r\n                state.items.push( {\r\n                    itemId: newItem.id,\r\n                    price: newItem.price,\r\n                    quantity: 1,\r\n                    totalPrice: newItem.price,\r\n                    name: newItem.title\r\n                })\r\n            } else {\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice = totalPrice + newItem.price;\r\n            }\r\n            \r\n        },\r\n        removeItemFromCart( state, action ) {\r\n            const id = action.payload;\r\n            const existingItem = state.items.find( item => item.id === id );\r\n            if ( existingItem.quantity === 1 ) {\r\n                state.items = state.items.filter( item => item.id !== id );\r\n            } else {\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n            }\r\n        }\r\n    }\r\n} );\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;"]},"metadata":{},"sourceType":"module"}