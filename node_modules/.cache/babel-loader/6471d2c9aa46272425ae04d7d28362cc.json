{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tec\\\\Desktop\\\\advance_redux\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { uiActions } from './store/ui-slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(uiActions.showNotification({\n        status: 'pending',\n        title: 'sending...',\n        message: 'Sending Cart data!'\n      }));\n      const response = await fetch('https://netflix-build-1a97f-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Sending Cart data failed\");\n      }\n\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success..',\n        message: 'Send Cart data succesfully'\n      }));\n    };\n\n    sendCartData().catch(error => {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending cart data failed!'\n      }));\n    });\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"M1A++yNtoifZBUfaWzkNdOhatC4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Tec/Desktop/advance_redux/src/App.js"],"names":["useEffect","useDispatch","useSelector","Cart","Layout","Products","uiActions","App","dispatch","showCart","state","ui","cartIsVisible","cart","sendCartData","showNotification","status","title","message","response","fetch","method","body","JSON","stringify","ok","Error","catch","error"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAMC,QAAQ,GAAIP,WAAW,EAA7B;AACA,QAAMQ,QAAQ,GAAGP,WAAW,CAAEQ,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASC,aAApB,CAA5B;AACA,QAAMC,IAAI,GAAGX,WAAW,CAAEQ,KAAK,IAAIA,KAAK,CAACG,IAAjB,CAAxB;AAEAb,EAAAA,SAAS,CAAE,MAAM;AACf,UAAMc,YAAY,GAAG,YAAY;AAC/BN,MAAAA,QAAQ,CAAEF,SAAS,CAACS,gBAAV,CAA4B;AACpCC,QAAAA,MAAM,EAAE,SAD4B;AAEpCC,QAAAA,KAAK,EAAE,YAF6B;AAGpCC,QAAAA,OAAO,EAAE;AAH2B,OAA5B,CAAF,CAAR;AAKA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,mEAAF,EAAuE;AACjGC,QAAAA,MAAM,EAAE,KADyF;AAEjGC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAgBX,IAAhB;AAF2F,OAAvE,CAA5B;;AAKA,UAAI,CAACM,QAAQ,CAACM,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAW,0BAAX,CAAN;AACD;;AAEDlB,MAAAA,QAAQ,CAAEF,SAAS,CAACS,gBAAV,CAA4B;AACpCC,QAAAA,MAAM,EAAE,SAD4B;AAEpCC,QAAAA,KAAK,EAAE,WAF6B;AAGpCC,QAAAA,OAAO,EAAC;AAH4B,OAA5B,CAAF,CAAR;AAMD,KArBD;;AAuBAJ,IAAAA,YAAY,GAAGa,KAAf,CAAwBC,KAAF,IAAa;AACjCpB,MAAAA,QAAQ,CACNF,SAAS,CAACS,gBAAV,CAA4B;AAC1BC,QAAAA,MAAM,EAAE,OADkB;AAE1BC,QAAAA,KAAK,EAAE,QAFmB;AAG1BC,QAAAA,OAAO,EAAE;AAHiB,OAA5B,CADM,CAAR;AAOD,KARD;AAYD,GApCQ,EAoCN,CAACL,IAAD,EAAOL,QAAP,CApCM,CAAT;AAsCA,sBACE,QAAC,MAAD;AAAA,eACGC,QAAQ,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADf,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAlDQF,G;UAEWN,W,EACDC,W,EACJA,W;;;KAJNK,G;AAoDT,eAAeA,GAAf","sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { uiActions } from './store/ui-slice';\n\nfunction App() {\n\n  const dispatch =  useDispatch()\n  const showCart = useSelector( state => state.ui.cartIsVisible );\n  const cart = useSelector( state => state.cart );\n\n  useEffect( () => {\n    const sendCartData = async () => {\n      dispatch( uiActions.showNotification( {\n        status: 'pending',\n        title: 'sending...',\n        message: 'Sending Cart data!'\n      } ) );\n      const response = await fetch( 'https://netflix-build-1a97f-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify( cart ),\n      } );\n\n      if (!response.ok) {\n        throw new Error( \"Sending Cart data failed\" );\n      }\n\n      dispatch( uiActions.showNotification( {\n        status: 'success',\n        title: 'Success..',\n        message:'Send Cart data succesfully'\n      }))\n\n    };\n\n    sendCartData().catch( ( error ) => {\n      dispatch(\n        uiActions.showNotification( {\n          status: 'error',\n          title: 'Error!',\n          message: 'Sending cart data failed!'\n        } )\n      )\n    })\n\n    \n    \n  }, [cart, dispatch])\n\n  return (\n    <Layout>\n      {showCart && <Cart />}\n      <Products />\n    </Layout>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}