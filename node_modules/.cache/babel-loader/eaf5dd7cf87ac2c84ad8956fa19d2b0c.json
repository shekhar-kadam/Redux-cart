{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tec\\\\Desktop\\\\advance_redux\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { uiActions } from './store/ui-slice';\nimport Notification from './components/UI/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(uiActions.showNotification({\n        status: 'pending',\n        title: 'sending...',\n        message: 'Sending Cart data!'\n      }));\n      const response = await fetch('https://netflix-build-1a97f-default-rtdb.firebaseio.com/cart.jsn', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Sending Cart data failed\");\n      }\n\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success..',\n        message: 'Send Cart data succesfully'\n      }));\n    };\n\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    sendCartData().catch(error => {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending cart data failed!'\n      }));\n    });\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ym533N9pcV2ZQROugfAj7yssIY8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Tec/Desktop/advance_redux/src/App.js"],"names":["Fragment","useEffect","useDispatch","useSelector","Cart","Layout","Products","uiActions","Notification","isInitial","App","dispatch","showCart","state","ui","cartIsVisible","cart","notification","sendCartData","showNotification","status","title","message","response","fetch","method","body","JSON","stringify","ok","Error","catch","error"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAGA,IAAIC,SAAS,GAAG,IAAhB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAMC,QAAQ,GAAIT,WAAW,EAA7B;AACA,QAAMU,QAAQ,GAAGT,WAAW,CAAEU,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASC,aAApB,CAA5B;AACA,QAAMC,IAAI,GAAGb,WAAW,CAAEU,KAAK,IAAIA,KAAK,CAACG,IAAjB,CAAxB;AACA,QAAMC,YAAY,GAAGd,WAAW,CAAEU,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASG,YAApB,CAAhC;AAEAhB,EAAAA,SAAS,CAAE,MAAM;AACf,UAAMiB,YAAY,GAAG,YAAY;AAC/BP,MAAAA,QAAQ,CAAEJ,SAAS,CAACY,gBAAV,CAA4B;AACpCC,QAAAA,MAAM,EAAE,SAD4B;AAEpCC,QAAAA,KAAK,EAAE,YAF6B;AAGpCC,QAAAA,OAAO,EAAE;AAH2B,OAA5B,CAAF,CAAR;AAKA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,kEAAF,EAAsE;AAChGC,QAAAA,MAAM,EAAE,KADwF;AAEhGC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAgBZ,IAAhB;AAF0F,OAAtE,CAA5B;;AAKA,UAAI,CAACO,QAAQ,CAACM,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAW,0BAAX,CAAN;AACD;;AAEDnB,MAAAA,QAAQ,CAAEJ,SAAS,CAACY,gBAAV,CAA4B;AACpCC,QAAAA,MAAM,EAAE,SAD4B;AAEpCC,QAAAA,KAAK,EAAE,WAF6B;AAGpCC,QAAAA,OAAO,EAAC;AAH4B,OAA5B,CAAF,CAAR;AAMD,KArBD;;AAuBA,QAAKb,SAAL,EAAiB;AACfA,MAAAA,SAAS,GAAG,KAAZ;AACA;AACD;;AAEDS,IAAAA,YAAY,GAAGa,KAAf,CAAwBC,KAAF,IAAa;AACjCrB,MAAAA,QAAQ,CACNJ,SAAS,CAACY,gBAAV,CAA4B;AAC1BC,QAAAA,MAAM,EAAE,OADkB;AAE1BC,QAAAA,KAAK,EAAE,QAFmB;AAG1BC,QAAAA,OAAO,EAAE;AAHiB,OAA5B,CADM,CAAR;AAOD,KARD;AAYD,GAzCQ,EAyCN,CAACN,IAAD,EAAOL,QAAP,CAzCM,CAAT;AA2CA,sBACE,QAAC,QAAD;AAAA,eACGM,YAAY,iBAAI,QAAC,YAAD;AAAc,MAAA,MAAM,EAAEA,YAAY,CAACG,MAAnC;AAA2C,MAAA,KAAK,EAAEH,YAAY,CAACI,KAA/D;AAAsE,MAAA,OAAO,EAAEJ,YAAY,CAACK;AAA5F;AAAA;AAAA;AAAA;AAAA,YADnB,eAEC,QAAC,MAAD;AAAA,iBACEV,QAAQ,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADd,eAEC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA3DQF,G;UAEWR,W,EACDC,W,EACJA,W,EACQA,W;;;KALdO,G;AA6DT,eAAeA,GAAf","sourcesContent":["import { Fragment, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { uiActions } from './store/ui-slice';\nimport Notification from './components/UI/Notification';\n\n\nlet isInitial = true;\n\nfunction App() {\n\n  const dispatch =  useDispatch()\n  const showCart = useSelector( state => state.ui.cartIsVisible );\n  const cart = useSelector( state => state.cart );\n  const notification = useSelector( state => state.ui.notification );\n\n  useEffect( () => {\n    const sendCartData = async () => {\n      dispatch( uiActions.showNotification( {\n        status: 'pending',\n        title: 'sending...',\n        message: 'Sending Cart data!'\n      } ) );\n      const response = await fetch( 'https://netflix-build-1a97f-default-rtdb.firebaseio.com/cart.jsn', {\n        method: 'PUT',\n        body: JSON.stringify( cart ),\n      } );\n\n      if (!response.ok) {\n        throw new Error( \"Sending Cart data failed\" );\n      }\n\n      dispatch( uiActions.showNotification( {\n        status: 'success',\n        title: 'Success..',\n        message:'Send Cart data succesfully'\n      }))\n\n    };\n\n    if ( isInitial ) {\n      isInitial = false;\n      return;\n    }\n\n    sendCartData().catch( ( error ) => {\n      dispatch(\n        uiActions.showNotification( {\n          status: 'error',\n          title: 'Error!',\n          message: 'Sending cart data failed!'\n        } )\n      )\n    })\n\n    \n    \n  }, [cart, dispatch])\n\n  return (\n    <Fragment>\n      {notification && <Notification status={notification.status} title={notification.title} message={notification.message}/>}\n     <Layout>\n      {showCart && <Cart />}\n      <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}