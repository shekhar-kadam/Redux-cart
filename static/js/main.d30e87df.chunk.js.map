{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","components/UI/Card.js","store/cart-slice.js","components/Cart/CartItem.js","components/Cart/Cart.js","store/ui-slice.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","App.js","store/cart-actions.js","store/index.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","cartSlice","createSlice","name","initialState","items","totalQuantity","changed","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","quantity","totalPrice","price","push","title","removeItemFromCart","filter","cartActions","actions","CartItem","dispatch","useDispatch","total","toFixed","itemprice","details","onClick","Cart","cartItems","useSelector","cart","map","uiSlice","cartIsVisible","notification","toggle","showNotification","status","message","uiActions","CartButton","cartQuantity","button","badge","MainHeader","header","Layout","ProductItem","description","DUMMY_PRODUCT","Products","products","product","isInitial","App","showCart","ui","useEffect","a","fetchData","fetch","response","ok","Error","json","data","cartData","sendRequest","method","body","JSON","stringify","sendCartData","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d30e87df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__1T4GL\",\"details\":\"CartItem_details__E2eIF\",\"quantity\":\"CartItem_quantity__MuEP4\",\"price\":\"CartItem_price__vkyOj\",\"itemprice\":\"CartItem_itemprice__2ZViI\",\"actions\":\"CartItem_actions__3-N7J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__2n0n6\",\"price\":\"ProductItem_price__31szd\",\"actions\":\"ProductItem_actions__3gmBI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__frdCF\",\"error\":\"Notification_error__35p33\",\"success\":\"Notification_success__9tiIW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__mYaSk\",\"badge\":\"CartButton_badge__3YgK8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1duut\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__3lqhM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__xiSxo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__3vyQG\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst cartSlice = createSlice( {\r\n    name: 'cart',\r\n    initialState: {\r\n        items: [],\r\n        totalQuantity: 0,\r\n        changed: false, \r\n    },\r\n    reducers: {\r\n        replaceCart( state, action ) {\r\n            state.totalQuantity = action.payload.totalQuantity;\r\n            state.items = action.payload.items;\r\n        },\r\n        addItemToCart( state, action ) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find( ( item ) => item.id === newItem.id );\r\n            state.totalQuantity++;\r\n            state.changed = true;\r\n            if ( !existingItem ) {\r\n                state.items.push( {\r\n                    id: newItem.id,\r\n                    price: newItem.price,\r\n                    quantity: 1,\r\n                    totalPrice: newItem.price,\r\n                    name: newItem.title\r\n                })\r\n            } else {\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n            }\r\n            \r\n        },\r\n        removeItemFromCart( state, action ) {\r\n            const id = action.payload;\r\n            const existingItem = state.items.find( item => item.id === id );\r\n            state.totalQuantity--;\r\n            state.changed = true;\r\n            if ( existingItem.quantity === 1 ) {\r\n                state.items = state.items.filter( item => item.id !== id );\r\n            } else {\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n            }\r\n        }\r\n    }\r\n} );\r\n\r\n\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;","import { useDispatch } from 'react-redux';\nimport { cartActions } from '../../store/cart-slice';\nimport classes from './CartItem.module.css';\n\nconst CartItem = ( props ) => {\n  \n  const dispatch = useDispatch()\n  const { title, quantity, total, price, id } = props.item;\n\n  const removeItemHandler = () => {\n    dispatch(cartActions.removeItemFromCart(id))\n  }\n\n  const addItemHandler = () => {\n    dispatch( cartActions.addItemToCart( {\n      id, title, price\n    }))\n  }\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{' '}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={removeItemHandler}>-</button>\n          <button onClick={addItemHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import { useSelector } from 'react-redux';\nimport Card from '../UI/Card';\nimport classes from './Cart.module.css';\nimport CartItem from './CartItem';\n\nconst Cart = ( props ) => {\n  \n  const cartItems = useSelector( state => state.cart.items );\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {cartItems.map( (item) => (\n          <CartItem\n            key={item.id}\n          item={{id: item.id, title: item.name, quantity: item.quantity, total: item.totalPrice, price: item.price }}\n        />\n        ))}\n        \n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst uiSlice = createSlice( {\r\n    name: 'ui',\r\n    initialState: { cartIsVisible: false, notification: null },\r\n    reducers: {\r\n        toggle( state ) {\r\n            state.cartIsVisible = !state.cartIsVisible;\r\n        },\r\n        showNotification( state, action ) {\r\n            state.notification = {\r\n                status: action.payload.status,\r\n                title: action.payload.title,\r\n                message: action.payload.message\r\n            }\r\n        }\r\n    }\r\n} );\r\n\r\nexport const uiActions = uiSlice.actions;\r\n\r\nexport default uiSlice;","import { useDispatch, useSelector } from 'react-redux';\nimport { uiActions } from '../../store/ui-slice';\nimport classes from './CartButton.module.css';\n\nconst CartButton = ( props ) => {\n\n  const dispatch = useDispatch();\n\n  const cartQuantity =  useSelector( state => state.cart.totalQuantity );\n  const toggleCartHandler = () => {\n    dispatch(uiActions.toggle())\n  }\n  return (\n    <button className={classes.button} onClick={toggleCartHandler}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{cartQuantity}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useDispatch, } from 'react-redux';\n\nimport { cartActions } from '../../store/cart-slice';\nimport Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\n\nconst ProductItem = (props) => {\n  const dispatch = useDispatch();\n\n  const { title, price, description, id } = props;\n\n  const addToCartHandler = () => {\n    \n\n    // and then send Http request\n    // fetch('firebase-url', { method: 'POST', body: JSON.stringify(newCart) })\n\n    dispatch(\n      cartActions.addItemToCart({\n        id,\n        title,\n        price,\n      })\n    );\n  };\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addToCartHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from './ProductItem';\nimport classes from './Products.module.css';\n\nconst DUMMY_PRODUCT = [\n  {\n    id: 'p1',\n    price: 6,\n    title: 'My First Book',\n    description: 'The First book i ever wrote..'\n  },\n  {\n    id: 'p2',\n    price: 4,\n    title: 'My Second Book',\n    description: 'The Second book i ever wrote..'\n  },\n  {\n    id: 'p3',\n    price: 10,\n    title: 'My Third Book',\n    description: 'The Third book i ever wrote..'\n  }\n]\n\nconst Products = (props) => {\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {DUMMY_PRODUCT.map( ( product ) => (\n          <ProductItem\n            key={product.id}\n            id={product.id}\n          title={product.title}\n          price={product.price}\n          description={product.description}\n        />\n        ))}\n        \n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import { Fragment, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport Notification from './components/UI/Notification';\nimport { sendCartData, fetchCartData } from './store/cart-actions';\n\n\nlet isInitial = true;\n\nfunction App() {\n\n  const dispatch =  useDispatch()\n  const showCart = useSelector( state => state.ui.cartIsVisible );\n  const cart = useSelector( state => state.cart );\n  const notification = useSelector( state => state.ui.notification );\n\n  useEffect( () => {\n    dispatch(fetchCartData())\n  }, [dispatch])\n\n  useEffect( () => {\n\n    if ( isInitial ) {\n      isInitial = false;\n      return\n    }\n\n    if ( cart.changed ) {\n      dispatch(sendCartData(cart))\n    }\n    \n  }, [cart, dispatch])\n\n  return (\n    <Fragment>\n     <Layout>\n      {showCart && <Cart />}\n      <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n\n\n\n// {notification && <Notification status={notification.status} title={notification.title} message={notification.message}/>}","import { cartActions } from \"./cart-slice\";\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\n\r\nexport const fetchCartData = () => {\r\n    return async ( dispatch ) => {\r\n        const fetchData = async () => {\r\n            const response = await fetch( 'https://netflix-build-1a97f-default-rtdb.firebaseio.com/cart.json' );\r\n\r\n            if ( !response.ok ) {\r\n                throw new Error( \"Fetching Data From Cart is Failed\" );\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            return data;\r\n        };\r\n\r\n        try {\r\n            const cartData = await fetchData();\r\n            dispatch( cartActions.replaceCart( {\r\n                items: cartData.items || [],\r\n                totalQuantity: cartData.totalQuantity,\r\n            }))\r\n        } catch ( error ) {\r\n            dispatch(\r\n                uiActions.showNotification( {\r\n                    status: \"error\",\r\n                    title: \"Error!\",\r\n                    message: \"Fetching cart data failed\",\r\n                } )\r\n            );\r\n        };\r\n    };\r\n}\r\n\r\nexport const sendCartData = ( cart ) => {\r\n    return async ( dispatch ) => {\r\n        dispatch( uiActions.showNotification( {\r\n            status: 'pending',\r\n            title: 'sending...',\r\n            message: 'Sending Cart data!'\r\n        } )\r\n        );\r\n        \r\n        const sendRequest = async () => {\r\n            const response = await fetch( 'https://netflix-build-1a97f-default-rtdb.firebaseio.com/cart.json', {\r\n                method: 'PUT',\r\n                body: JSON.stringify( {\r\n                    items: cart.items,\r\n                    totalQuantity: cart.totalQuantity\r\n                } ),\r\n            } );\r\n\r\n            if ( !response.ok ) {\r\n                throw new Error( \"Sending Cart data failed\" );\r\n            };\r\n        };\r\n\r\n        try {\r\n            await sendRequest();\r\n\r\n            dispatch( uiActions.showNotification( {\r\n                status: 'success',\r\n                title: 'Success..',\r\n                message: 'Send Cart data succesfully'\r\n            } )\r\n            );\r\n        } catch ( error ) {\r\n            dispatch(\r\n                uiActions.showNotification( {\r\n                    status: 'error',\r\n                    title: 'Error!',\r\n                    message: 'Sending cart data failed!'\r\n                } )\r\n            );\r\n        }\r\n    }\r\n};","import { configureStore } from '@reduxjs/toolkit';\r\nimport cartSlice from './cart-slice';\r\nimport uiSlice from './ui-slice';\r\n\r\nconst store = configureStore( {\r\n    reducer: {ui: uiSlice.reducer, cart: cartSlice.reducer}\r\n} );\r\n\r\nexport default store;","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store/index';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}